name: build-project
on: [push]
jobs:
  build-matrix:
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          os:
            - ubuntu-latest
            - macos-latest
          compiler:
          - gcc
          - llvm
          - clang
          include:
            - os: "windows-latest"
              compiler: "msvc"
          exclude:
          # macos with gcc does not work with gcc for some reason (works with llvm and clang) so just ignore for now.
            - os: "macos-latest"
              compiler: gcc
      steps:
        - uses: actions/checkout@v2
          with:
            submodules: recursive

        - name: Setup C++ with ${{ matrix.compiler }}
          uses: aminya/setup-cpp@v1
          with:
            compiler: ${{ matrix.compiler }}
            cmake: true
        
        - name: Try get vulkan-sdk-config.json LINUX
          shell: bash
          run: | 
            curl -o vulkan-sdk-config.json "https://vulkan.lunarg.com/sdk/config/linux/config.json"
          if: runner.os == 'Linux'

        - name: Try get vulkan-sdk-config.json WINDOWS
          shell: bash
          run: | 
            curl -o vulkan-sdk-config.json "https://vulkan.lunarg.com/sdk/config/windows/config.json"
          if: runner.os == 'Windows'
        
        - name: Try get vulkan-sdk-config.json MAC
          shell: bash
          run: | 
            curl -o vulkan-sdk-config.json "https://vulkan.lunarg.com/sdk/config/mac/config.json"
          if: runner.os == 'macOS'


        - name: Prepare Vulkan SDK
          uses: humbletim/setup-vulkan-sdk@v1.2.0
          with:
            vulkan-config-file: vulkan-sdk-config.json
            vulkan-components: Vulkan-Headers, Vulkan-Loader
            vulkan-use-cache: true
        
        - name: Setup GLFW on Linux
          uses: RpxdYTX/install-glfw-deps@v2
          if: runner.os == 'Linux'

        - name: Compile
          run: cmake -S . -B build && cmake --build build